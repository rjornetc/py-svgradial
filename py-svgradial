#! /usr/bin/python
# -*- coding: utf-8 -*-

__author__ = 'Raúl Jornet Calomarde'
__contact__ = 'rjornetc@openmailbox.org'
__copyright__ = 'Copyright © 2015, Raúl Jornet Calomarde'
__license__ = ''''License GPLv3+: GNU GPL version 3 or any later
This program is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or any later version. This program
is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU General Public License for more details.
<http://www.gnu.org/licenses/>'''
__date__ = '08/02/2015'
__version__ = '0.0.0'


from math import cos, sin, pi

class RadialGraph():
    
    title = ''
    axis = []
    values = []
    min_value = 0
    max_value = 10
    
    def __init__(self, title):
        self.title = title 
    
    
    def addValue(self, axis, value):
        self.axis.append(axis)
        self.values.append(value)
    
    
    def getSVG(self):
        svg = '''<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:cc="http://creativecommons.org/ns#"
  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  xmlns:svg="http://www.w3.org/2000/svg"
  xmlns="http://www.w3.org/2000/svg" width="256" height="256"
>
  <g transform="translate(128,128)" id="background">'''
        axis_count = len(self.axis)
        axis_angle = 2 * pi / axis_count
        for i in range(0, axis_count):
            current_angle = axis_angle * i
            svg += '''
    <path d="M 0,0 ''' +\
        str(sin(current_angle) * 96) + ',' +\
        str(-cos(current_angle) * 96) + '" id="' +\
        self.axis[i] + '" style="fill:none;stroke:#000000;stroke-width:1px;\
stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />'
        
        svg += '''
  </g>
  <g transform="translate(128,128)" id="foreground">
    <path d="M '''
        for i in range(0, axis_count):
            current_angle = axis_angle * i
            value = float(self.values[i]) / float(self.max_value)
            svg += str(sin(current_angle) * 96.0 * value) + ',' +\
                   str(-cos(current_angle) * 96.0 * value) + ' '
        svg += '''z" id="foreground" style="fill:#cc4444;stroke:#000000;\
stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
  </g>
</svg>'''
        return svg

if __name__ == '__main__':
    rg = RadialGraph('test')
    rg.addValue('STR', 0.0)
    rg.addValue('INT', 0.5)
    rg.addValue('STR', 1.0)
    rg.addValue('INT', 1.5)
    rg.addValue('STR', 2.0)
    rg.addValue('INT', 2.5)
    rg.addValue('STR', 3.0)
    rg.addValue('INT', 3.5)
    rg.addValue('STR', 4.0)
    rg.addValue('INT', 4.5)
    rg.addValue('STR', 5.0)
    rg.addValue('INT', 5.5)
    rg.addValue('STR', 6.0)
    rg.addValue('INT', 6.5)
    rg.addValue('STR', 7.0)
    rg.addValue('INT', 7.5)
    rg.addValue('STR', 8.0)
    rg.addValue('INT', 8.5)
    rg.addValue('STR', 9.0)
    rg.addValue('INT', 9.5)
    print(rg.getSVG())